#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API
"""
import os
import asyncio
from dotenv import load_dotenv
from aiogram import Bot

async def test_telegram_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API"""
    load_dotenv()
    
    BOT_TOKEN = os.getenv("BOT_TOKEN")
    if not BOT_TOKEN:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    print(f"üîë BOT_TOKEN –Ω–∞–π–¥–µ–Ω: {BOT_TOKEN[:10]}...")
    
    try:
        bot = Bot(token=BOT_TOKEN)
        print("ü§ñ –°–æ–∑–¥–∞–Ω –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        me = await bot.get_me()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API")
        print(f"ü§ñ –ò–º—è –±–æ—Ç–∞: {me.first_name}")
        print(f"üÜî ID –±–æ—Ç–∞: {me.id}")
        print(f"üë§ Username: @{me.username}")
        
        await bot.session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API: {e}")
        return False

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API")
    print("=" * 50)
    
    result = asyncio.run(test_telegram_connection())
    
    if result:
        print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!") 