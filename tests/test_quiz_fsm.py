#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ FSM —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–≤–∏–∑–∞
"""
import asyncio
from unittest.mock import MagicMock

async def test_quiz_states():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–≤–∏–∑–∞"""
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–≤–∏–∑–∞...")
    
    try:
        from quiz_mod import QuizState, register_quiz_handlers
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        states = [QuizState.Q1, QuizState.Q2, QuizState.Q3, QuizState.Q4, QuizState.Q5, QuizState.DONE]
        print(f"‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏—è –∫–≤–∏–∑–∞: {[state.state for state in states]}")
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
        mock_dp = MagicMock()
        mock_bot = MagicMock()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        register_quiz_handlers(mock_dp, mock_bot)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã
        call_count = mock_dp.message.call_count
        print(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {call_count}")
        
        if call_count >= 6:  # /quiz, 5 —Å–æ—Å—Ç–æ—è–Ω–∏–π, /quiz_stats
            print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        else:
            print("‚ùå –ù–µ –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        
        print("\nüéâ –¢–µ—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_quiz_states()) 