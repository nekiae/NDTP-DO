#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–≤–∏–∑ –º–æ–¥—É–ª—è
"""
import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_quiz_module():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–≤–∏–∑–∞"""
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–≤–∏–∑ –º–æ–¥—É–ª—è...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è
        from quiz_mod import (
            load_system_prompt, 
            check_user_quota, 
            get_quiz_stats,
            DEEPSEEK_AVAILABLE,
            SYSTEM_PROMPT,
            quiz_start_callback
        )
        print("‚úÖ –ö–≤–∏–∑ –º–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        if SYSTEM_PROMPT:
            print(f"‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω ({len(SYSTEM_PROMPT)} —Å–∏–º–≤–æ–ª–æ–≤)")
            if "DIRECTIONS" in SYSTEM_PROMPT:
                print("‚úÖ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã –≤ –ø—Ä–æ–º–ø—Ç–µ")
            else:
                print("‚ùå –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø—Ä–æ–º–ø—Ç–µ")
        else:
            print("‚ùå –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º DeepSeek
        if DEEPSEEK_AVAILABLE:
            print("‚úÖ DeepSeek API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå DeepSeek API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–≤–æ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user_id = 123456789
        quota_ok = await check_user_quota(test_user_id)
        print(f"‚úÖ –ö–≤–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {quota_ok}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = get_quiz_stats()
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–≤–∏–∑–∞: {stats}")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")

async def test_deepseek_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ DeepSeek API"""
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ DeepSeek API...")
    
    try:
        from quiz_mod import ask_llm, DEEPSEEK_AVAILABLE
        
        if not DEEPSEEK_AVAILABLE:
            print("‚ùå DeepSeek API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
        test_history = [
            {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"}
        ]
        
        response = await ask_llm(test_history)
        if response and not response.startswith("‚ùå"):
            print(f"‚úÖ DeepSeek –æ—Ç–≤–µ—Ç–∏–ª: {response[:100]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ DeepSeek: {response}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ DeepSeek: {e}")

if __name__ == "__main__":
    asyncio.run(test_quiz_module())
    asyncio.run(test_deepseek_connection()) 