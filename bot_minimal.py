#!/usr/bin/env python3
"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞ –±–µ–∑ RAG —Å–∏—Å—Ç–µ–º
"""
import os
import logging
import sys
from typing import Optional
import asyncio
import time
from datetime import datetime
from dotenv import load_dotenv

import aiohttp
from aiogram import Bot, Dispatcher, types, F, BaseMiddleware
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
DEEPSEEK_API_KEY = os.getenv("DEEPSEEK_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

if not DEEPSEEK_API_KEY:
    raise ValueError("DEEPSEEK_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM
class UserState(StatesGroup):
    IN_QUIZ = State()

# –ü—Ä–æ—Å—Ç—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@dp.message(Command("start"))
async def cmd_start(message: Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    welcome_text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –¥–µ—Ç—Å–∫–æ–≥–æ —Ç–µ—Ö–Ω–æ–ø–∞—Ä–∫–∞!\n\n"
        "ü§ñ –Ø –≤–∞—à –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è).\n\n"
        "üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /help - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å\n"
        "‚Ä¢ /status - —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n"
        "‚Ä¢ /test - —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "üí¨ –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!"
    )
    
    await message.answer(welcome_text)

@dp.message(Command("help"))
async def cmd_help(message: Message):
    """–ü–æ–º–æ—â—å"""
    help_text = (
        "üìû –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É\n\n"
        "–≠—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.\n"
        "–í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
        "‚Ä¢ RAG —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n"
        "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤\n"
        "‚Ä¢ –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–º–µ–Ω\n"
        "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–æ–≤\n"
        "‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!"
    )
    
    await message.answer(help_text)

@dp.message(Command("status"))
async def cmd_status(message: Message):
    """–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
    status_text = (
        "‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n\n"
        "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
        "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –∞–∫—Ç–∏–≤–Ω–æ\n"
        "‚úÖ –ö–æ–º–∞–Ω–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è\n"
        "‚ö†Ô∏è RAG —Å–∏—Å—Ç–µ–º—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)\n\n"
        f"üïí –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}\n"
        f"üìÖ –î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y')}"
    )
    
    await message.answer(status_text)

@dp.message(Command("test"))
async def cmd_test(message: Message):
    """–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    await message.answer("üß™ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")

@dp.message(F.text)
async def handle_text(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_text = message.text.lower()
    
    # –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã
    if any(word in user_text for word in ['–ø—Ä–∏–≤–µ—Ç', 'hello', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π']):
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ —Ç–µ—Ö–Ω–æ–ø–∞—Ä–∫–∞.\n"
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å RAG —Å–∏—Å—Ç–µ–º–æ–π."
        )
    elif any(word in user_text for word in ['—Å–ø–∞—Å–∏–±–æ', 'thanks']):
        await message.answer("üôè –ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –ø–æ–º–æ—á—å!")
    elif any(word in user_text for word in ['–ø–æ–∫–∞', 'bye', '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è']):
        await message.answer("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –£–¥–∞—á–∏!")
    else:
        await message.answer(
            f"üí¨ –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {message.text}\n\n"
            "‚ÑπÔ∏è –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞. –î–ª—è –ø–æ–ª–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã "
            "–Ω—É–∂–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å RAG —Å–∏—Å—Ç–µ–º–æ–π.\n\n"
            "üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /help, /status, /test"
        )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –¥–µ—Ç—Å–∫–æ–≥–æ —Ç–µ—Ö–Ω–æ–ø–∞—Ä–∫–∞...")
    logger.info("‚ö†Ô∏è RAG —Å–∏—Å—Ç–µ–º—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    logger.info("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main()) 