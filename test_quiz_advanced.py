#!/usr/bin/env python3
"""
–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –∫–≤–∏–∑–∞
"""
import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_quiz_psychology():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –∫–≤–∏–∑–∞"""
    print("üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∫–≤–∏–∑–∞...")
    
    try:
        from quiz_mod import ask_llm, DEEPSEEK_AVAILABLE, SYSTEM_PROMPT
        
        if not DEEPSEEK_AVAILABLE:
            print("‚ùå DeepSeek API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –ø—Ä–æ–º–ø—Ç–µ –µ—Å—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–µ–≥–∏
        if "psychology_tags" in SYSTEM_PROMPT:
            print("‚úÖ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–µ–≥–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø—Ä–æ–º–ø—Ç–µ")
        else:
            print("‚ùå –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–µ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        if "–∫–æ—Å–≤–µ–Ω–Ω—ã–µ" in SYSTEM_PROMPT:
            print("‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ –∫–æ—Å–≤–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("‚ùå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ –∫–æ—Å–≤–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        # –¢–µ—Å—Ç –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞...")
        history = []
        
        first_question = await ask_llm(history)
        print(f"Q1: {first_question}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–ø—Ä–æ—Å –∫–æ—Å–≤–µ–Ω–Ω—ã–π (–Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π)
        direct_mentions = [
            "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", "–±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", 
            "–∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "–¥–∏–∑–∞–π–Ω", "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
            "—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "–∞–≤–∏–∞–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ", "–≥–µ–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"
        ]
        
        is_indirect = not any(mention.lower() in first_question.lower() for mention in direct_mentions)
        if is_indirect:
            print("‚úÖ –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –∫–æ—Å–≤–µ–Ω–Ω—ã–π (–Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π)")
        else:
            print("‚ùå –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –ø—Ä—è–º–æ–π")
            
        # –¢–µ—Å—Ç —Ü–µ–ø–æ—á–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
        print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤...")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ —Ç–∏–ø–∞
        creative_answer = "–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ, —Ä–∏—Å–æ–≤–∞—Ç—å, –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏"
        history.append({"role": "assistant", "content": first_question})
        history.append({"role": "user", "content": creative_answer})
        
        second_question = await ask_llm(history)
        print(f"Q2 (–ø–æ—Å–ª–µ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞): {second_question}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å —Ä–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–µ–º—É —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞
        creative_keywords = ["—Å–æ–∑–¥–∞–≤–∞—Ç—å", "—Ç–≤–æ—Ä–∏—Ç—å", "–ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å", "–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ", "–º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç"]
        is_following_up = any(keyword in second_question.lower() for keyword in creative_keywords)
        if is_following_up:
            print("‚úÖ –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å —Ä–∞–∑–≤–∏–≤–∞–µ—Ç —Ç–µ–º—É –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞")
        else:
            print("‚ùå –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å –ø–µ—Ä–≤—ã–º –æ—Ç–≤–µ—Ç–æ–º")
            
        print("\nüéâ –¢–µ—Å—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")

async def test_quiz_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–≤–µ—Ç–æ–≤...")
    
    try:
        from quiz_mod import ask_llm, DEEPSEEK_AVAILABLE
        
        if not DEEPSEEK_AVAILABLE:
            print("‚ùå DeepSeek API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥
        history = [
            {"role": "assistant", "content": "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–π –¥–µ–Ω—å. –ß—Ç–æ –±—ã —Ç—ã –ø—Ä–µ–¥–ø–æ—á–µ–ª –¥–µ–ª–∞—Ç—å?"},
            {"role": "user", "content": "–Ø –±—ã —Ö–æ—Ç–µ–ª —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å—Ç–∞—Ä—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç"},
            {"role": "assistant", "content": "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –ê —á—Ç–æ —Ç–µ–±–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è - –∫–æ–≥–¥–∞ —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –∫–æ–≥–¥–∞ –º–æ–∂–µ—à—å —á—Ç–æ-—Ç–æ —É–ª—É—á—à–∏—Ç—å?"},
            {"role": "user", "content": "–ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–Ω—è—Ç—å, –∞ –ø–æ—Ç–æ–º —É–∂–µ –¥—É–º–∞—Ç—å –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ"},
            {"role": "assistant", "content": "–ê –µ—Å–ª–∏ –±—ã —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—ã–ª–æ —Ä–µ—à–∏—Ç—å —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É, —Ç—ã –±—ã –ø—Ä–µ–¥–ø–æ—á–µ–ª —Ä–∞–±–æ—Ç–∞—Ç—å –æ–¥–∏–Ω –∏–ª–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π?"},
            {"role": "user", "content": "–ù–∞–≤–µ—Ä–Ω–æ–µ –æ–¥–∏–Ω, —á—Ç–æ–±—ã –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–ª –∏ –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è"},
            {"role": "assistant", "content": "–ü–æ–Ω–∏–º–∞—é. –ê —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ - —Å–æ–∑–¥–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–æ–≤–æ–µ –∏–ª–∏ —É–ª—É—á—à–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ?"},
            {"role": "user", "content": "–°–∫–æ—Ä–µ–µ —É–ª—É—á—à–∞—Ç—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å —á—Ç–æ –Ω–µ —Ç–∞–∫ –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å"},
            {"role": "assistant", "content": "–ò –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å: —á—Ç–æ —Ç–µ–±—è –±–æ–ª—å—à–µ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç - –∫–æ–≥–¥–∞ —Ç–≤–æ—è —Ä–∞–±–æ—Ç–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –∏–ª–∏ –∫–æ–≥–¥–∞ —Ç—ã —Ä–µ—à–∞–µ—à—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É?"},
            {"role": "user", "content": "–ë–æ–ª—å—à–µ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç —Å–∞–º–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞, —ç—Ç–æ –∫–∞–∫ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∞"},
            {"role": "user", "content": "–í—Å–µ 5 –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω—ã, –ø–æ—Ä–∞ –ø–æ–¥—ã—Ç–æ–∂–∏—Ç—å."}
        ]
        
        final_analysis = await ask_llm(history)
        print("üìä –§–∏–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:")
        print(final_analysis)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
        if "üéØ –ê–Ω–∞–ª–∏–∑ —Ç–≤–æ–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏:" in final_analysis:
            print("‚úÖ –ê–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –ê–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
        if "üìö –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:" in final_analysis:
            print("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            print("‚ùå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            
        if "üí° –ì–ª–∞–≤–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:" in final_analysis:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –ì–ª–∞–≤–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
        print("\nüéØ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_quiz_psychology())
    asyncio.run(test_quiz_analysis()) 