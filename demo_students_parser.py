#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–∞—Ä—Å–µ—Ä–∞ —É—á–∞—â–∏—Ö—Å—è –ù–î–¢–ü
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–∞—Ä—Å–µ—Ä, –µ—Å–ª–∏ –±—ã –Ω–∞ —Å–∞–π—Ç–µ –±—ã–ª–∏ —Å–ø–∏—Å–∫–∏ —É—á–∞—â–∏—Ö—Å—è
"""

import asyncio
import json
import logging
from datetime import datetime
from typing import Dict, List, Optional
import os

logger = logging.getLogger(__name__)

class DemoStudentsParser:
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä —É—á–∞—â–∏—Ö—Å—è –ù–î–¢–ü —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    # 15 –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ù–î–¢–ü
    EDUCATIONAL_DIRECTIONS = [
        "–ê–≤–∏–∞–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –¥–∏–∑–∞–π–Ω", 
        "–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å",
        "–ó–µ–ª—ë–Ω–∞—è —Ö–∏–º–∏—è",
        "–ò–Ω–∂–µ–Ω–µ—Ä–Ω–∞—è —ç–∫–æ–ª–æ–≥–∏—è",
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "–õ–∞–∑–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "–ú–∞—à–∏–Ω—ã –∏ –¥–≤–∏–≥–∞—Ç–µ–ª–∏. –ê–≤—Ç–æ–º–æ–±–∏–ª–µ—Å—Ç—Ä–æ–µ–Ω–∏–µ",
        "–ù–∞–Ω–æ–∏–Ω–¥—É—Å—Ç—Ä–∏—è –∏ –Ω–∞–Ω–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        "–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã",
        "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞",
        "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ —Å–≤—è–∑—å",
        "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –±—É–¥—É—â–µ–≥–æ"
    ]
    
    def __init__(self):
        self.students_file = "demo_students_list.json"
        self.last_update_file = "last_demo_students_update.txt"
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—á–∞—â–∏—Ö—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ù–î–¢–ü
        self.demo_students = [
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê–≤–∏–∞–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª",
                "row_number": 1,
                "full_name": "–ì—Ä–∞–∂–µ–≤—Å–∫–∞—è –Ø–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–ì–ª—É–±–æ–∫—Å–∫–∞—è —Ä–∞–π–æ–Ω–Ω–∞—è –≥–∏–º–Ω–∞–∑–∏—è¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê–≤–∏–∞–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª",
                "row_number": 2,
                "full_name": "–Å–∂–∏–∫–æ–≤ –î–º–∏—Ç—Ä–∏–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
                "group": "",
                "class": "",
                "additional_info": "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–ü—Ä–∏–±–æ—Ä—Å–∫–∞—è —Å—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞ –ì–æ–º–µ–ª—å—Å–∫–æ–≥–æ —Ä–∞–π–æ–Ω–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê–≤–∏–∞–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª",
                "row_number": 3,
                "full_name": "–ò–Ω–∫–∞–ª—ë–≤–∞ –î–∞—Ä—å—è –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞ ‚Ññ5 –≥.–°–ª–æ–Ω–∏–º–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê–≤–∏–∞–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª",
                "row_number": 4,
                "full_name": "–ö–∞–±–∞—Å—å –î–∏–∞–Ω–∞ –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–≥.–ú–∏–Ω—Å–∫, –ì–£–û ¬´–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ61 –≥.–ú–∏–Ω—Å–∫–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê–≤–∏–∞–∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª",
                "row_number": 5,
                "full_name": "–ö–∞–∑–∏–ª–µ—Ü–∫–∏–π –ú–∞–∫—Å–∏–º –°–µ—Ä–≥–µ–µ–≤–∏—á",
                "group": "",
                "class": "",
                "additional_info": "–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞ ‚Ññ5 –≥.–°–ª–æ–Ω–∏–º–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –¥–∏–∑–∞–π–Ω¬ª",
                "row_number": 1,
                "full_name": "–ò–≥–Ω–∞—Ç–µ–Ω–∫–æ –ï–ª–∏–∑–∞–≤–µ—Ç–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞ ‚Ññ5 –≥.–°–≤–µ—Ç–ª–æ–≥–æ—Ä—Å–∫–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –¥–∏–∑–∞–π–Ω¬ª",
                "row_number": 2,
                "full_name": "–ö–∞–ª–µ–Ω–∫–æ–≤–∏—á –í–∏–∫—Ç–æ—Ä–∏—è –ù–∏–∫–æ–ª–∞–µ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–ì–æ–º–µ–ª—å—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–ì–æ–º–µ–ª—å—Å–∫–∏–π –≥–æ—Ä–æ–¥—Å–∫–æ–π –ª–∏—Ü–µ–π ‚Ññ1¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –¥–∏–∑–∞–π–Ω¬ª",
                "row_number": 3,
                "full_name": "–ö–æ–ª–µ—Å–Ω–∏–∫–æ–≤–∞ –í–∏–∫—Ç–æ—Ä–∏—è –î–º–∏—Ç—Ä–∏–µ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–ú–∏–Ω—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–°–º–æ–ª–µ–≤–∏—á—Å–∫–∞—è —Ä–∞–π–æ–Ω–Ω–∞—è –≥–∏–º–Ω–∞–∑–∏—è¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –¥–∏–∑–∞–π–Ω¬ª",
                "row_number": 4,
                "full_name": "–ü—É—Ö–æ–≤–∞ –î–∏–∞–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–°—Ä–µ–¥–Ω—è—è —à–∫–æ–ª–∞ ‚Ññ1 –≥.–ü–æ–ª–æ—Ü–∫–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª",
                "row_number": 1,
                "full_name": "–°–∏–¥–æ—Ä–æ–≤ –ú–∏—Ö–∞–∏–ª –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
                "group": "",
                "class": "",
                "additional_info": "–≥.–ú–∏–Ω—Å–∫, –ì–£–û ¬´–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ1 –≥.–ú–∏–Ω—Å–∫–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏¬ª",
                "row_number": 2,
                "full_name": "–ü–µ—Ç—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–≥.–ú–∏–Ω—Å–∫, –ì–£–û ¬´–õ–∏—Ü–µ–π –ë–ì–£¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞¬ª",
                "row_number": 1,
                "full_name": "–ö–æ–∑–ª–æ–≤–∞ –ï–ª–µ–Ω–∞ –î–º–∏—Ç—Ä–∏–µ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ2 –≥.–ì—Ä–æ–¥–Ω–æ¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞¬ª",
                "row_number": 2,
                "full_name": "–ù–æ–≤–∏–∫–æ–≤ –ê—Ä—Ç–µ–º –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
                "group": "",
                "class": "",
                "additional_info": "–ë—Ä–µ—Å—Ç—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–õ–∏—Ü–µ–π ‚Ññ1 –≥.–ë—Ä–µ—Å—Ç–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ —Å–≤—è–∑—å¬ª",
                "row_number": 1,
                "full_name": "–ú–æ—Ä–æ–∑–æ–≤–∞ –î–∞—Ä—å—è –ò–≥–æ—Ä–µ–≤–Ω–∞",
                "group": "",
                "class": "",
                "additional_info": "–ú–æ–≥–∏–ª–µ–≤—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–°–® ‚Ññ15 –≥.–ú–æ–≥–∏–ª–µ–≤–∞¬ª"
            },
            {
                "table_title": "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ —Å–≤—è–∑—å¬ª",
                "row_number": 2,
                "full_name": "–í–æ–ª–∫–æ–≤ –î–µ–Ω–∏—Å –ü–µ—Ç—Ä–æ–≤–∏—á",
                "group": "",
                "class": "",
                "additional_info": "–í–∏—Ç–µ–±—Å–∫–∞—è –æ–±–ª., –ì–£–û ¬´–ì–∏–º–Ω–∞–∑–∏—è ‚Ññ3 –≥.–í–∏—Ç–µ–±—Å–∫–∞¬ª"
            }
        ]
    
    def save_demo_students(self) -> bool:
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—á–∞—â–∏—Ö—Å—è"""
        try:
            students_data = {
                "title": "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—á–∞—â–∏—Ö—Å—è –ù–î–¢–ü",
                "students": self.demo_students,
                "total_count": len(self.demo_students),
                "last_updated": datetime.now().isoformat(),
                "source_url": "https://ndtp.by/schedule/",
                "note": "–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞"
            }
            
            with open(self.students_file, 'w', encoding='utf-8') as f:
                json.dump(students_data, f, ensure_ascii=False, indent=2)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            with open(self.last_update_file, 'w', encoding='utf-8') as f:
                f.write(datetime.now().isoformat())
            
            logger.info(f"üíæ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—á–∞—â–∏—Ö—Å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã ({len(self.demo_students)} –∑–∞–ø–∏—Å–µ–π)")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False
    
    def load_demo_students(self) -> Optional[Dict]:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—á–∞—â–∏—Ö—Å—è"""
        try:
            if os.path.exists(self.students_file):
                with open(self.students_file, 'r', encoding='utf-8') as f:
                    return json.load(f)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        
        return None
    
    def get_demo_students_context(self, query: str = "") -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ —É—á–∞—â–∏—Ö—Å—è"""
        try:
            students_data = self.load_demo_students()
            if not students_data:
                # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                self.save_demo_students()
                students_data = self.load_demo_students()
            
            students = students_data.get('students', [])
            total_count = students_data.get('total_count', 0)
            last_updated = students_data.get('last_updated', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            
            if not students:
                return "üìã –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—á–∞—â–∏—Ö—Å—è –ø—É—Å—Ç."
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            response = f"üìã **–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—á–∞—â–∏—Ö—Å—è –ù–î–¢–ü**\n\n"
            response += f"–í—Å–µ–≥–æ —É—á–∞—â–∏—Ö—Å—è: {total_count}\n"
            response += f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {last_updated}\n"
            response += f"*–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–∞–±–æ—Ç—ã –ø–∞—Ä—Å–µ—Ä–∞*\n\n"
            
            if query:
                # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∑–∞–ø—Ä–æ—Å—É
                filtered_students = []
                query_lower = query.lower()
                
                for student in students:
                    full_name = student.get('full_name', '').lower()
                    group = student.get('group', '').lower()
                    class_info = student.get('class', '').lower()
                    
                    if (query_lower in full_name or 
                        query_lower in group or 
                        query_lower in class_info):
                        filtered_students.append(student)
                
                if filtered_students:
                    response += f"–ù–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}': {len(filtered_students)}\n\n"
                    for i, student in enumerate(filtered_students[:20], 1):
                        response += self._format_demo_student_info(student, i)
                    
                    if len(filtered_students) > 20:
                        response += f"\n... –∏ –µ—â–µ {len(filtered_students) - 20} –∑–∞–ø–∏—Å–µ–π"
                else:
                    response += f"–ü–æ –∑–∞–ø—Ä–æ—Å—É '{query}' –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
            else:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 15 —É—á–∞—â–∏—Ö—Å—è
                response += "–ü–µ—Ä–≤—ã–µ 15 —É—á–∞—â–∏—Ö—Å—è:\n\n"
                for i, student in enumerate(students[:15], 1):
                    response += self._format_demo_student_info(student, i)
                
                if len(students) > 15:
                    response += f"\n... –∏ –µ—â–µ {len(students) - 15} —É—á–∞—â–∏—Ö—Å—è"
            
            return response
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {e}")
            return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —É—á–∞—â–∏—Ö—Å—è."
    
    def _format_demo_student_info(self, student: Dict, index: int) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —É—á–∞—â–µ–º—Å—è"""
        row_num = student.get('row_number', '')
        name = student.get('full_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        direction = student.get('table_title', '')
        additional = student.get('additional_info', '')
        
        line = f"{index}. "
        if row_num:
            line += f"[{row_num}] "
        
        line += f"**{name}**"
        
        if additional:
            line += f" - {additional}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–∫–æ–±–∫–∞—Ö
        if direction and '–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' in direction:
            direction_short = direction.replace('–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´', '').replace('¬ª', '')
            line += f" ({direction_short})"
        
        return line + "\n"
    
    def get_demo_students_summary(self) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ —É—á–∞—â–∏—Ö—Å—è"""
        try:
            students_data = self.load_demo_students()
            if not students_data:
                return "‚ùå –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–ø–∏—Å–∫–µ —É—á–∞—â–∏—Ö—Å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
            
            total_count = students_data.get('total_count', 0)
            last_updated = students_data.get('last_updated', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            
            return f"üìã –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—á–∞—â–∏—Ö—Å—è –ù–î–¢–ü: {total_count} –∑–∞–ø–∏—Å–µ–π (–æ–±–Ω–æ–≤–ª–µ–Ω–æ: {last_updated})"
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–≤–æ–¥–∫–∏: {e}")
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ —Å–ø–∏—Å–∫–µ —É—á–∞—â–∏—Ö—Å—è"
    
    def get_educational_directions_info(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö –ù–î–¢–ü"""
        info = "üéì –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ù–î–¢–ü:\n\n"
        
        for i, direction in enumerate(self.EDUCATIONAL_DIRECTIONS, 1):
            info += f"{i}. {direction}\n"
        
        info += f"\nüìö –í—Å–µ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π: {len(self.EDUCATIONAL_DIRECTIONS)}"
        info += "\n\nüí° –£—á–µ–±–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –Ω–∞ 72 —á–∞—Å–∞."
        info += "\nüìÖ –ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è 6 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é –ø–æ 4 —á–∞—Å–∞ –≤ –≥—Ä—É–ø–ø–∞—Ö –ø–æ 7-10 —á–µ–ª–æ–≤–µ–∫."
        
        return info


# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def get_demo_students_context(query: str = "") -> str:
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —É—á–∞—â–∏—Ö—Å—è"""
    parser = DemoStudentsParser()
    return parser.get_demo_students_context(query)


async def get_demo_students_context_async(query: str = "") -> str:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —É—á–∞—â–∏—Ö—Å—è"""
    parser = DemoStudentsParser()
    return parser.get_demo_students_context(query)


async def demo_students_parser():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –ø–∞—Ä—Å–µ—Ä–∞ —É—á–∞—â–∏—Ö—Å—è"""
    parser = DemoStudentsParser()
    
    print("üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–∞ —É—á–∞—â–∏—Ö—Å—è –ù–î–¢–ü")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö
    directions_info = parser.get_educational_directions_info()
    print("\nüéì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö:")
    print(directions_info)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    success = parser.save_demo_students()
    if success:
        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—á–∞—â–∏—Ö—Å—è —Å–æ–∑–¥–∞–Ω—ã")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É
        summary = parser.get_demo_students_summary()
        print(f"\nüìã {summary}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫
        context = parser.get_demo_students_context()
        print(f"\nüìã –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫:")
        print(context)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∏—Å–∫
        search_context = parser.get_demo_students_context("10 –∫–ª–∞—Å—Å")
        print(f"\nüîç –ü–æ–∏—Å–∫ –ø–æ '10 –∫–ª–∞—Å—Å':")
        print(search_context)
        
        return True
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        return False


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
    asyncio.run(demo_students_parser()) 